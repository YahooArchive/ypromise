;(function (global) {

var __p, modules = {};

function define(name, deps, factory) {
    if (typeof deps === 'function') {
        factory = deps;
        deps = ['require', 'exports', 'module'];
    }
    function require(name) {
        return modules[name];
    }
    var module = {
            exports: {}
        },
        instances = [],
        i;

    for (i = 0; i < deps.length; i++) {
        switch (deps[i]) {
            case 'require':
                instances[i] = require;
                break;
            case 'exports':
                instances[i] = module.exports;
                break;
            case 'module':
                instances[i] = module;
                break;
            default:
                instances[i] = modules[deps[i]];
                break;
        }
    }
    modules[name] = factory.apply(null, instances);
}

{{{definition}}}

if (!global.Promise ||
    !global.Promise.resolve ||
    !global.Promise.reject ||
    !global.Promise.all ||
    !global.Promise.race ||
    (__p = global.Promise.resolve()) !== global.Promise.resolve(__p)) {
    global.Promise = modules.promise['default'];
}
global.PromisePolyfill = modules.promise['default'];

}(this));
